{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/client/app/phaser/src/constants.js",
    "src/client/app/phaser/src/index.js",
    "src/client/app/phaser/src/states/GameState.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "export const CellWidth = 50;\nexport const ElapsedTime = 500;\nexport const SizeTerrain = 51;\nexport const WidthCanvas = 800;\nexport const HeighCanvas = 500;",
    "import GameState from './states/GameState';\nimport { WidthCanvas, HeighCanvas}  from './constants';\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\t\tsuper(WidthCanvas, HeighCanvas, Phaser.AUTO, 'content', null);\n\t\tthis.state.add('GameState', GameState, false);\n\t\tthis.state.start('GameState');\n\t}\n\n}\n\nnew Game();\n",
    "import { CellWidth, ElapsedTime, SizeTerrain, WidthCanvas, HeighCanvas } from '../constants';\n\nconst CameraVelocity = 10;\nconst Bounds = WidthCanvas;//CellWidth * SizeTerrain;\n\nclass GameState extends Phaser.State {\n\n\tcreate() {\n\t\tthis.game.world.setBounds(0, 0, WidthCanvas, HeighCanvas);\n\t\tthis.cursors = this.game.input.keyboard.createCursorKeys();\n\t\tthis.game.stage.backgroundColor = '#80d735';\n    \t//this.initCamera();\n    \tthis.ball =  { x: 50, y: 50, radius: 10, speedX: 0, speedY: 0 };\n    \tthis.hole = { x: 200, y: 200, radius: 15 };\n    \tthis.client = {\n    \t\tid: 'htm970h',\n    \t\tsize: { width: WidthCanvas, height: HeighCanvas },\n    \t\ttransform: { x: 0, y: 0 },\n        //transform: { x: -640.0799999999999, y: -88.0846593284227 },\n        adjacentClientIDs: [],\n    \t\tclusterID: 'r8x2vaa',\n    \t\t//openings: {\"left\":[],\"top\":[],\"right\":[{\"start\":0,\"end\":363.63686948275586}],\"bottom\":[]},\n    \t\topenings: {\"left\":[{\"start\":100,\"end\":363.63686948275586}],\"top\":[{\"start\":100,\"end\":363.63686948275586}],\"right\":[{\"start\":100,\"end\":363.63686948275586}],\"bottom\":[{\"start\":100,\"end\":363.63686948275586}]},\n        data: { rotationX: 0, rotationY: 0 }\n    \t}\n\n    \tthis.drawBall(this.ball);\n    \tthis.drawHole(this.hole);\n    \tthis.drawWalls(this.client)\n\t}\n\n  initCamera() {\n    this.game.camera.x = this.game.world.width / 2 - WidthCanvas / 2;\n    this.game.camera.y = this.game.world.height / 2 - HeighCanvas / 2;\n  }\n\n\tupdate() {\n\n\t    if (this.cursors.up.isDown)\n\t    {\n\t      this.game.camera.y -= CameraVelocity;\n\t    }\n\t    else if (this.cursors.down.isDown)\n\t    {\n\t      this.game.camera.y += CameraVelocity;\n\t    }\n\n\t    if (this.cursors.left.isDown)\n\t    {\n\t    \tthis.game.camera.x -= CameraVelocity;\n\t    }\n\t    else if (this.cursors.right.isDown)\n\t    {\n\t    \tthis.game.camera.x += CameraVelocity;\n\t    }\n\t}\n\n\tdrawBall (ball) {\n\tconst bmd = this.game.add.bitmapData(100, 100);\n\n    bmd.ctx.fillStyle = '#fff';\n    bmd.ctx.shadowBlur = 10;\n    bmd.ctx.shadowColor = 'rgba(0, 0, 0, 0.2)';\n\n    bmd.ctx.beginPath();\n    bmd.ctx.arc(ball.radius, ball.radius, ball.radius, 0, 2 * Math.PI);\n    bmd.ctx.fill();\n\n    const sprite = this.game.add.sprite(ball.x, ball.y, bmd);\n    console.log(sprite)\n  }\n\n  drawHole (hole) {\n    const bmd = this.game.add.bitmapData(300, 300);\n\n    bmd.ctx.fillStyle = 'black';\n    bmd.ctx.strokeStyle = '#4b7f1f';\n    bmd.ctx.lineWidth = 2;\n\n    bmd.ctx.beginPath();\n    bmd.ctx.arc(hole.radius, hole.radius, hole.radius, 0, 2 * Math.PI);\n    bmd.ctx.fill();\n    bmd.ctx.stroke();\n\n    const sprite = this.game.add.sprite(hole.x, hole.y, bmd);\n  }\n\n  drawLeft(openings, transformX, transformY, width, height, lineWidth = 40) {\n    const bmdLeft = this.game.add.bitmapData(lineWidth/2, height);\n    bmdLeft.ctx.lineWidth = lineWidth;\n    bmdLeft.ctx.shadowColor = '#dba863';\n    bmdLeft.ctx.shadowBlur = 10;\n    bmdLeft.ctx.strokeStyle = '#ffde99';\n\n    bmdLeft.ctx.beginPath();\n    bmdLeft.ctx.moveTo(transformX, transformY);\n\n    openings.left.sort(this.openingSort).forEach(function (opening) {\n      bmdLeft.ctx.lineTo(transformX, opening.start + transformY);\n      bmdLeft.ctx.stroke();\n      bmdLeft.ctx.beginPath();\n      bmdLeft.ctx.moveTo(transformX, opening.end + transformY);\n    });\n\n    bmdLeft.ctx.lineTo(transformX, height + transformY);\n    bmdLeft.ctx.stroke();\n\n    this.left = this.game.add.sprite(0, 0, bmdLeft);\n  }\n\n  drawRight(openings, transformX, transformY, width, height, lineWidth = 40) {\n    const bmdRight = this.game.add.bitmapData(lineWidth/2, height);\n    bmdRight.ctx.lineWidth = lineWidth;\n    bmdRight.ctx.shadowColor = '#dba863';\n    bmdRight.ctx.shadowBlur = 10;\n    bmdRight.ctx.strokeStyle = '#ffde99';\n\n    bmdRight.ctx.beginPath();\n    bmdRight.ctx.moveTo(transformX, transformY);\n\n    openings.right.sort(this.openingSort).forEach(function (opening) {\n      bmdRight.ctx.lineTo(transformX, opening.start + transformY);\n      bmdRight.ctx.stroke();\n      bmdRight.ctx.beginPath();\n      bmdRight.ctx.moveTo(transformX, opening.end + transformY);\n    });\n\n    bmdRight.ctx.lineTo(transformX, height + transformY);\n    bmdRight.ctx.stroke();\n    this.right = this.game.add.sprite(width - lineWidth/2, 0, bmdRight);\n  }\n\n  drawTop(openings, transformX, transformY, width, height, lineWidth = 40) {\n    const bmdTop = this.game.add.bitmapData(width, lineWidth/2);\n    bmdTop.ctx.lineWidth = lineWidth;\n    bmdTop.ctx.shadowColor = '#dba863';\n    bmdTop.ctx.shadowBlur = 10;\n    bmdTop.ctx.strokeStyle = '#ffde99';\n    bmdTop.ctx.beginPath();\n    bmdTop.ctx.moveTo(transformX, transformY);\n\n    openings.top.sort(this.openingSort).forEach(function (opening) {\n      bmdTop.ctx.lineTo(opening.start + transformX, transformY);\n      bmdTop.ctx.stroke();\n      bmdTop.ctx.beginPath();\n      bmdTop.ctx.moveTo(opening.end + transformX, transformY);\n    });\n\n    bmdTop.ctx.lineTo(width + transformX, transformY);\n    bmdTop.ctx.stroke();\n    this.top = this.game.add.sprite(0, 0, bmdTop);\n  }\n\n  drawBottom(openings, transformX, transformY, width, height, lineWidth = 40) {\n    const bmdBottom = this.game.add.bitmapData(width, lineWidth/2);\n    bmdBottom.ctx.lineWidth = lineWidth;\n    bmdBottom.ctx.shadowColor = '#dba863';\n    bmdBottom.ctx.shadowBlur = 10;\n    bmdBottom.ctx.strokeStyle = '#ffde99';\n    bmdBottom.ctx.beginPath();\n    bmdBottom.ctx.moveTo(transformX, transformY);\n\n    openings.bottom.sort(this.openingSort).forEach(function (opening) {\n      bmdBottom.ctx.lineTo(opening.start + transformX, transformY);\n      bmdBottom.ctx.stroke();\n      bmdBottom.ctx.beginPath();\n      bmdBottom.ctx.moveTo(opening.end + transformX, transformY);\n    });\n\n    bmdBottom.ctx.lineTo(width + transformX, transformY);\n    bmdBottom.ctx.stroke();\n    this.top = this.game.add.sprite(0, height - lineWidth/2, bmdBottom);\n  }\n\n  drawWalls (client) {\n  \t//TODO openings\n    const openings = client.openings;\n    const transformX = client.transform.x;\n    const transformY = client.transform.y;\n    const width = client.size.width;\n    const height = client.size.height;\n\n    const lineWidth = 40\n    this.drawLeft(openings, transformX, transformY, width, height, lineWidth);\n    this.drawRight(openings, transformX, transformY, width, height, lineWidth);\n    this.drawTop(openings, transformX, transformY, width, height, lineWidth);\n    this.drawBottom(openings, transformX, transformY, width, height, lineWidth);\n  }\n\n  openingSort (openingA, openingB) {\n    return openingB.start - openingA.start;\n  }\n\n\trender() {\n\t\t//this.game.debug.pointer( this.game.input.activePointer );\n\t\t//this.game.debug.spriteBounds(this.right, \"#AAAAAA\", false);\n\t  this.game.debug.text(this.game.time.fps, 2, 14, \"#00ff00\");\n\t}\n\n\n}\n\nexport default GameState;\n"
  ]
}